"use strict";function _typeof(r){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}var _this=void 0;function _regeneratorRuntime(){_regeneratorRuntime=function(){return i};var i={},r=Object.prototype,u=r.hasOwnProperty,l=Object.defineProperty||function(r,t,e){r[t]=e.value},t="function"==typeof Symbol?Symbol:{},o=t.iterator||"@@iterator",e=t.asyncIterator||"@@asyncIterator",n=t.toStringTag||"@@toStringTag";function a(r,t,e){return Object.defineProperty(r,t,{value:e,enumerable:!0,configurable:!0,writable:!0}),r[t]}try{a({},"")}catch(r){a=function(r,t,e){return r[t]=e}}function c(r,t,e,o){var n,a,i,c,t=t&&t.prototype instanceof d?t:d,t=Object.create(t.prototype),o=new b(o||[]);return l(t,"_invoke",{value:(n=r,a=e,i=o,c="suspendedStart",function(r,t){if("executing"===c)throw new Error("Generator is already running");if("completed"===c){if("throw"===r)throw t;return L()}for(i.method=r,i.arg=t;;){var e=i.delegate;if(e){e=function r(t,e){var o=e.method,n=t.iterator[o];if(void 0===n)return e.delegate=null,"throw"===o&&t.iterator.return&&(e.method="return",e.arg=void 0,r(t,e),"throw"===e.method)||"return"!==o&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+o+"' method")),s;o=f(n,t.iterator,e.arg);if("throw"===o.type)return e.method="throw",e.arg=o.arg,e.delegate=null,s;n=o.arg;return n?n.done?(e[t.resultName]=n.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,s):n:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,s)}(e,i);if(e){if(e===s)continue;return e}}if("next"===i.method)i.sent=i._sent=i.arg;else if("throw"===i.method){if("suspendedStart"===c)throw c="completed",i.arg;i.dispatchException(i.arg)}else"return"===i.method&&i.abrupt("return",i.arg);c="executing";e=f(n,a,i);if("normal"===e.type){if(c=i.done?"completed":"suspendedYield",e.arg===s)continue;return{value:e.arg,done:i.done}}"throw"===e.type&&(c="completed",i.method="throw",i.arg=e.arg)}})}),t}function f(r,t,e){try{return{type:"normal",arg:r.call(t,e)}}catch(r){return{type:"throw",arg:r}}}i.wrap=c;var s={};function d(){}function h(){}function y(){}var t={},m=(a(t,o,function(){return this}),Object.getPrototypeOf),m=m&&m(m(w([]))),v=(m&&m!==r&&u.call(m,o)&&(t=m),y.prototype=d.prototype=Object.create(t));function p(r){["next","throw","return"].forEach(function(t){a(r,t,function(r){return this._invoke(t,r)})})}function g(i,c){var t;l(this,"_invoke",{value:function(e,o){function r(){return new c(function(r,t){!function t(r,e,o,n){var a,r=f(i[r],i,e);if("throw"!==r.type)return(e=(a=r.arg).value)&&"object"==_typeof(e)&&u.call(e,"__await")?c.resolve(e.__await).then(function(r){t("next",r,o,n)},function(r){t("throw",r,o,n)}):c.resolve(e).then(function(r){a.value=r,o(a)},function(r){return t("throw",r,o,n)});n(r.arg)}(e,o,r,t)})}return t=t?t.then(r,r):r()}})}function _(r){var t={tryLoc:r[0]};1 in r&&(t.catchLoc=r[1]),2 in r&&(t.finallyLoc=r[2],t.afterLoc=r[3]),this.tryEntries.push(t)}function E(r){var t=r.completion||{};t.type="normal",delete t.arg,r.completion=t}function b(r){this.tryEntries=[{tryLoc:"root"}],r.forEach(_,this),this.reset(!0)}function w(t){if(t){var e,r=t[o];if(r)return r.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length))return e=-1,(r=function r(){for(;++e<t.length;)if(u.call(t,e))return r.value=t[e],r.done=!1,r;return r.value=void 0,r.done=!0,r}).next=r}return{next:L}}function L(){return{value:void 0,done:!0}}return l(v,"constructor",{value:h.prototype=y,configurable:!0}),l(y,"constructor",{value:h,configurable:!0}),h.displayName=a(y,n,"GeneratorFunction"),i.isGeneratorFunction=function(r){r="function"==typeof r&&r.constructor;return!!r&&(r===h||"GeneratorFunction"===(r.displayName||r.name))},i.mark=function(r){return Object.setPrototypeOf?Object.setPrototypeOf(r,y):(r.__proto__=y,a(r,n,"GeneratorFunction")),r.prototype=Object.create(v),r},i.awrap=function(r){return{__await:r}},p(g.prototype),a(g.prototype,e,function(){return this}),i.AsyncIterator=g,i.async=function(r,t,e,o,n){void 0===n&&(n=Promise);var a=new g(c(r,t,e,o),n);return i.isGeneratorFunction(t)?a:a.next().then(function(r){return r.done?r.value:a.next()})},p(v),a(v,n,"Generator"),a(v,o,function(){return this}),a(v,"toString",function(){return"[object Generator]"}),i.keys=function(r){var t,e=Object(r),o=[];for(t in e)o.push(t);return o.reverse(),function r(){for(;o.length;){var t=o.pop();if(t in e)return r.value=t,r.done=!1,r}return r.done=!0,r}},i.values=w,b.prototype={constructor:b,reset:function(r){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!r)for(var t in this)"t"===t.charAt(0)&&u.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var r=this.tryEntries[0].completion;if("throw"===r.type)throw r.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var o=this;function r(r,t){return a.type="throw",a.arg=e,o.next=r,t&&(o.method="next",o.arg=void 0),!!t}for(var t=this.tryEntries.length-1;0<=t;--t){var n=this.tryEntries[t],a=n.completion;if("root"===n.tryLoc)return r("end");if(n.tryLoc<=this.prev){var i=u.call(n,"catchLoc"),c=u.call(n,"finallyLoc");if(i&&c){if(this.prev<n.catchLoc)return r(n.catchLoc,!0);if(this.prev<n.finallyLoc)return r(n.finallyLoc)}else if(i){if(this.prev<n.catchLoc)return r(n.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<n.finallyLoc)return r(n.finallyLoc)}}}},abrupt:function(r,t){for(var e=this.tryEntries.length-1;0<=e;--e){var o=this.tryEntries[e];if(o.tryLoc<=this.prev&&u.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var n=o;break}}var a=(n=n&&("break"===r||"continue"===r)&&n.tryLoc<=t&&t<=n.finallyLoc?null:n)?n.completion:{};return a.type=r,a.arg=t,n?(this.method="next",this.next=n.finallyLoc,s):this.complete(a)},complete:function(r,t){if("throw"===r.type)throw r.arg;return"break"===r.type||"continue"===r.type?this.next=r.arg:"return"===r.type?(this.rval=this.arg=r.arg,this.method="return",this.next="end"):"normal"===r.type&&t&&(this.next=t),s},finish:function(r){for(var t=this.tryEntries.length-1;0<=t;--t){var e=this.tryEntries[t];if(e.finallyLoc===r)return this.complete(e.completion,e.afterLoc),E(e),s}},catch:function(r){for(var t=this.tryEntries.length-1;0<=t;--t){var e,o,n=this.tryEntries[t];if(n.tryLoc===r)return"throw"===(e=n.completion).type&&(o=e.arg,E(n)),o}throw new Error("illegal catch attempt")},delegateYield:function(r,t,e){return this.delegate={iterator:w(r),resultName:t,nextLoc:e},"next"===this.method&&(this.arg=void 0),s}},i}var __awaiter=function(r,i,c,u){return new(c=c||Promise)(function(e,t){function o(r){try{a(u.next(r))}catch(r){t(r)}}function n(r){try{a(u.throw(r))}catch(r){t(r)}}function a(r){var t;r.done?e(r.value):((t=r.value)instanceof c?t:new c(function(r){r(t)})).then(o,n)}a((u=u.apply(r,i||[])).next())})},ageCalcForm=document.querySelector(".age-calc-form"),ageCalcLabels=document.querySelectorAll(".age-calc-form__label"),ageCalcDayInput=document.querySelector('.age-calc-form__input[data-id="day"]'),ageCalcMonthInput=document.querySelector('.age-calc-form__input[data-id="month"]'),ageCalcYearInput=document.querySelector('.age-calc-form__input[data-id="year"]'),ageCalcInputs=document.querySelectorAll(".age-calc-form__input"),ageCalcErrorParagraphs=document.querySelectorAll(".age-calc-form__error"),ageCalcSubmitBtn=document.querySelector(".age-calc-form__submit-btn"),dayError=document.querySelector('.age-calc-form__error[data-error-id="day"'),monthError=document.querySelector('.age-calc-form__error[data-error-id="month"'),yearError=document.querySelector('.age-calc-form__error[data-error-id="year"'),currentYear=(new Date).getFullYear(),calcAge=function(r){r.preventDefault(),validateForm()},validateForm=function(){return __awaiter(_this,void 0,void 0,_regeneratorRuntime().mark(function r(){return _regeneratorRuntime().wrap(function(r){for(;;)switch(r.prev=r.next){case 0:if(!1===checkIfEmpty())return r.abrupt("return");r.next=2;break;case 2:setTimeout(function(){checkIfAccurateValues()},300);case 3:case"end":return r.stop()}},r)}))},checkIfEmpty=function(){var e=[],o=[];return ageCalcInputs.forEach(function(r){var t=r.dataset.id;(""===r.value?e:o).push(t)}),e.forEach(function(r){r=document.querySelector('.age-calc-form__error[data-error-id="'.concat(r,'"]'));r.textContent="This field is required",r.classList.add("age-calc-form__error--active"),r.classList.add("age-calc-form__error--active-visibility")}),o.forEach(function(r){removeError(r)}),0===e.length},checkIfAccurateValues=function(){var o,n;return ageCalcInputs.forEach(function(r){var t=r.dataset.id;Array.from(ageCalcErrorParagraphs).find(function(r){return r.dataset.errorId===t});switch(t){case"day":(o=Number(r.value))<=0&&addDayError();break;case"month":if(12<(n=Number(r.value))||n<=0)addDayError(),addMonthError();else{if(2===n){if(28<o)return void addDayError();removeError("day")}else if(1===n||3===n||5===n||7===n||8===n||10===n||12===n){if(31<o)return void addDayError();removeError("day")}else if(2!==n){if(30<o)return void addDayError();removeError("day")}removeError("month")}break;case"year":var e=Number(r.value);currentYear<=e?addYearError():removeError("year"),e%4==0&&2===n&&29===o&&removeError("day")}}),""===dayError.textContent||""===monthError.textContent||""===yearError.textContent},clearErrors=function(){ageCalcErrorParagraphs.forEach(function(r){return r.classList.remove("age-calc-form__error--active")}),setTimeout(function(){ageCalcErrorParagraphs.forEach(function(r){return r.classList.remove("age-calc-form__error--active-visibility")}),ageCalcErrorParagraphs.forEach(function(r){return r.textContent=""})},300),ageCalcForm.classList.remove("age-calc-form--error")},removeError=function(r){var t=document.querySelector('.age-calc-form__error[data-error-id="'.concat(r,'"'));t.classList.remove("age-calc-form__error--active"),setTimeout(function(){t.textContent="",t.classList.remove("age-calc-form__error--active-visibility")},300)},addDayError=function(){dayError.textContent="Must be a valid day",dayError.classList.add("age-calc-form__error--active"),dayError.classList.add("age-calc-form__error--active-visibility")},addMonthError=function(){monthError.textContent="Must be a valid month",monthError.classList.add("age-calc-form__error--active"),monthError.classList.add("age-calc-form__error--active-visibility")},addYearError=function(){yearError.textContent="Must be in the past",yearError.classList.add("age-calc-form__error--active"),yearError.classList.add("age-calc-form__error--active-visibility")};ageCalcSubmitBtn.addEventListener("click",calcAge);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
