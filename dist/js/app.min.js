"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var _this=void 0;function _regeneratorRuntime(){_regeneratorRuntime=function(){return i};var i={},t=Object.prototype,u=t.hasOwnProperty,l=Object.defineProperty||function(t,r,e){t[r]=e.value},r="function"==typeof Symbol?Symbol:{},n=r.iterator||"@@iterator",e=r.asyncIterator||"@@asyncIterator",o=r.toStringTag||"@@toStringTag";function a(t,r,e){return Object.defineProperty(t,r,{value:e,enumerable:!0,configurable:!0,writable:!0}),t[r]}try{a({},"")}catch(t){a=function(t,r,e){return t[r]=e}}function c(t,r,e,n){var o,a,i,c,r=r&&r.prototype instanceof h?r:h,r=Object.create(r.prototype),n=new b(n||[]);return l(r,"_invoke",{value:(o=t,a=e,i=n,c="suspendedStart",function(t,r){if("executing"===c)throw new Error("Generator is already running");if("completed"===c){if("throw"===t)throw r;return x()}for(i.method=t,i.arg=r;;){var e=i.delegate;if(e){e=function t(r,e){var n=e.method,o=r.iterator[n];if(void 0===o)return e.delegate=null,"throw"===n&&r.iterator.return&&(e.method="return",e.arg=void 0,t(r,e),"throw"===e.method)||"return"!==n&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+n+"' method")),s;n=f(o,r.iterator,e.arg);if("throw"===n.type)return e.method="throw",e.arg=n.arg,e.delegate=null,s;o=n.arg;return o?o.done?(e[r.resultName]=o.value,e.next=r.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,s):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,s)}(e,i);if(e){if(e===s)continue;return e}}if("next"===i.method)i.sent=i._sent=i.arg;else if("throw"===i.method){if("suspendedStart"===c)throw c="completed",i.arg;i.dispatchException(i.arg)}else"return"===i.method&&i.abrupt("return",i.arg);c="executing";e=f(o,a,i);if("normal"===e.type){if(c=i.done?"completed":"suspendedYield",e.arg===s)continue;return{value:e.arg,done:i.done}}"throw"===e.type&&(c="completed",i.method="throw",i.arg=e.arg)}})}),r}function f(t,r,e){try{return{type:"normal",arg:t.call(r,e)}}catch(t){return{type:"throw",arg:t}}}i.wrap=c;var s={};function h(){}function d(){}function p(){}var r={},y=(a(r,n,function(){return this}),Object.getPrototypeOf),y=y&&y(y(E([]))),v=(y&&y!==t&&u.call(y,n)&&(r=y),p.prototype=h.prototype=Object.create(r));function m(t){["next","throw","return"].forEach(function(r){a(t,r,function(t){return this._invoke(r,t)})})}function g(i,c){var r;l(this,"_invoke",{value:function(e,n){function t(){return new c(function(t,r){!function r(t,e,n,o){var a,t=f(i[t],i,e);if("throw"!==t.type)return(e=(a=t.arg).value)&&"object"==_typeof(e)&&u.call(e,"__await")?c.resolve(e.__await).then(function(t){r("next",t,n,o)},function(t){r("throw",t,n,o)}):c.resolve(e).then(function(t){a.value=t,n(a)},function(t){return r("throw",t,n,o)});o(t.arg)}(e,n,t,r)})}return r=r?r.then(t,t):t()}})}function w(t){var r={tryLoc:t[0]};1 in t&&(r.catchLoc=t[1]),2 in t&&(r.finallyLoc=t[2],r.afterLoc=t[3]),this.tryEntries.push(r)}function _(t){var r=t.completion||{};r.type="normal",delete r.arg,t.completion=r}function b(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(w,this),this.reset(!0)}function E(r){if(r){var e,t=r[n];if(t)return t.call(r);if("function"==typeof r.next)return r;if(!isNaN(r.length))return e=-1,(t=function t(){for(;++e<r.length;)if(u.call(r,e))return t.value=r[e],t.done=!1,t;return t.value=void 0,t.done=!0,t}).next=t}return{next:x}}function x(){return{value:void 0,done:!0}}return l(v,"constructor",{value:d.prototype=p,configurable:!0}),l(p,"constructor",{value:d,configurable:!0}),d.displayName=a(p,o,"GeneratorFunction"),i.isGeneratorFunction=function(t){t="function"==typeof t&&t.constructor;return!!t&&(t===d||"GeneratorFunction"===(t.displayName||t.name))},i.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,p):(t.__proto__=p,a(t,o,"GeneratorFunction")),t.prototype=Object.create(v),t},i.awrap=function(t){return{__await:t}},m(g.prototype),a(g.prototype,e,function(){return this}),i.AsyncIterator=g,i.async=function(t,r,e,n,o){void 0===o&&(o=Promise);var a=new g(c(t,r,e,n),o);return i.isGeneratorFunction(r)?a:a.next().then(function(t){return t.done?t.value:a.next()})},m(v),a(v,o,"Generator"),a(v,n,function(){return this}),a(v,"toString",function(){return"[object Generator]"}),i.keys=function(t){var r,e=Object(t),n=[];for(r in e)n.push(r);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},i.values=E,b.prototype={constructor:b,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(_),!t)for(var r in this)"t"===r.charAt(0)&&u.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function t(t,r){return a.type="throw",a.arg=e,n.next=t,r&&(n.method="next",n.arg=void 0),!!r}for(var r=this.tryEntries.length-1;0<=r;--r){var o=this.tryEntries[r],a=o.completion;if("root"===o.tryLoc)return t("end");if(o.tryLoc<=this.prev){var i=u.call(o,"catchLoc"),c=u.call(o,"finallyLoc");if(i&&c){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(i){if(this.prev<o.catchLoc)return t(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}}},abrupt:function(t,r){for(var e=this.tryEntries.length-1;0<=e;--e){var n=this.tryEntries[e];if(n.tryLoc<=this.prev&&u.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}var a=(o=o&&("break"===t||"continue"===t)&&o.tryLoc<=r&&r<=o.finallyLoc?null:o)?o.completion:{};return a.type=t,a.arg=r,o?(this.method="next",this.next=o.finallyLoc,s):this.complete(a)},complete:function(t,r){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&r&&(this.next=r),s},finish:function(t){for(var r=this.tryEntries.length-1;0<=r;--r){var e=this.tryEntries[r];if(e.finallyLoc===t)return this.complete(e.completion,e.afterLoc),_(e),s}},catch:function(t){for(var r=this.tryEntries.length-1;0<=r;--r){var e,n,o=this.tryEntries[r];if(o.tryLoc===t)return"throw"===(e=o.completion).type&&(n=e.arg,_(o)),n}throw new Error("illegal catch attempt")},delegateYield:function(t,r,e){return this.delegate={iterator:E(t),resultName:r,nextLoc:e},"next"===this.method&&(this.arg=void 0),s}},i}var __awaiter=function(t,i,c,u){return new(c=c||Promise)(function(e,r){function n(t){try{a(u.next(t))}catch(t){r(t)}}function o(t){try{a(u.throw(t))}catch(t){r(t)}}function a(t){var r;t.done?e(t.value):((r=t.value)instanceof c?r:new c(function(t){t(r)})).then(n,o)}a((u=u.apply(t,i||[])).next())})},ageCalcForm=document.querySelector(".age-calc-form"),ageCalcInputs=document.querySelectorAll(".age-calc-form__input"),ageCalcErrorParagraphs=document.querySelectorAll(".age-calc-form__error"),ageCalcSubmitBtn=document.querySelector(".age-calc-form__submit-btn"),currentYear=(new Date).getFullYear(),calcAge=function(r){return __awaiter(_this,void 0,void 0,_regeneratorRuntime().mark(function t(){return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return r.preventDefault(),t.next=3,validateForm();case 3:if(!1===t.sent)return t.abrupt("return");t.next=6;break;case 6:case"end":return t.stop()}},t)}))},validateForm=function(){return __awaiter(_this,void 0,void 0,_regeneratorRuntime().mark(function t(){var r,e,n=this;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(!1===checkIfEmpty())return t.abrupt("return",!1);t.next=2;break;case 2:return r=function(){return new Promise(function(t){return setTimeout(t,300)})},e=function(){return __awaiter(n,void 0,void 0,_regeneratorRuntime().mark(function t(){return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,r();case 2:return t.abrupt("return",checkIfAccurateValues());case 3:case"end":return t.stop()}},t)}))},t.next=6,e();case 6:return t.abrupt("return",t.sent);case 7:case"end":return t.stop()}},t)}))},checkIfEmpty=function(){var e=[],n=[];return ageCalcInputs.forEach(function(t){var r=t.dataset.id;(""===t.value?e:n).push(r)}),n.forEach(function(t){return removeError(t)}),e.forEach(function(t){addError(t,"empty")}),0===e.length},checkIfAccurateValues=function(){var n,o,a=[1,3,5,7,8,10,12],r=0;return ageCalcInputs.forEach(function(t){var r=t.dataset.id;Array.from(ageCalcErrorParagraphs).find(function(t){return t.dataset.errorId===r});switch(r){case"day":(n=Number(t.value))<=0&&addError("day","notValidated");break;case"month":if(12<(o=Number(t.value))||o<=0)addError("day","notValidated"),addError("month","notValidated");else{if(2===o){if(28<n)return void addError("day","notValidated");removeError("day")}else if(a.includes(o)){if(31<n)return void addError("day","notValidated");removeError("day")}else if(2!==o){if(30<n)return void addError("day","notValidated");removeError("day")}removeError("month")}break;case"year":var e=Number(t.value);currentYear<=e?addError("year","notValidated"):removeError("year"),e%4==0&&2===o&&29===n&&removeError("day")}}),ageCalcErrorParagraphs.forEach(function(t){""===t.textContent&&r++}),3===r},removeError=function(t){var r=document.querySelector('.age-calc-form__error[data-error-id="'.concat(t,'"'));r.classList.remove("age-calc-form__error--active"),ageCalcForm.classList.remove("age-calc-form--error"),setTimeout(function(){r.textContent="",r.classList.remove("age-calc-form__error--active-visibility")},300)},addError=function(t,r){var e=document.querySelector('.age-calc-form__error[data-error-id="'.concat(t,'"'));if(ageCalcForm.classList.add("age-calc-form--error"),"empty"===r)e.textContent="This field is required";else switch(t){case"day":e.textContent="Must be a valid day";break;case"month":e.textContent="Must be a valid month";break;case"year":e.textContent="Must be in the past"}e.classList.add("age-calc-form__error--active"),e.classList.add("age-calc-form__error--active-visibility")};ageCalcSubmitBtn.addEventListener("click",calcAge);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
