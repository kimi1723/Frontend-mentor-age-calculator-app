"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var _this=void 0;function _regeneratorRuntime(){_regeneratorRuntime=function(){return c};var c={},t=Object.prototype,u=t.hasOwnProperty,l=Object.defineProperty||function(t,e,r){t[e]=r.value},e="function"==typeof Symbol?Symbol:{},n=e.iterator||"@@iterator",r=e.asyncIterator||"@@asyncIterator",o=e.toStringTag||"@@toStringTag";function a(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{a({},"")}catch(t){a=function(t,e,r){return t[e]=r}}function i(t,e,r,n){var o,a,c,i,e=e&&e.prototype instanceof h?e:h,e=Object.create(e.prototype),n=new b(n||[]);return l(e,"_invoke",{value:(o=t,a=r,c=n,i="suspendedStart",function(t,e){if("executing"===i)throw new Error("Generator is already running");if("completed"===i){if("throw"===t)throw e;return E()}for(c.method=t,c.arg=e;;){var r=c.delegate;if(r){r=function t(e,r){var n=r.method,o=e.iterator[n];if(void 0===o)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=void 0,t(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),f;n=s(o,e.iterator,r.arg);if("throw"===n.type)return r.method="throw",r.arg=n.arg,r.delegate=null,f;o=n.arg;return o?o.done?(r[e.resultName]=o.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=void 0),r.delegate=null,f):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,f)}(r,c);if(r){if(r===f)continue;return r}}if("next"===c.method)c.sent=c._sent=c.arg;else if("throw"===c.method){if("suspendedStart"===i)throw i="completed",c.arg;c.dispatchException(c.arg)}else"return"===c.method&&c.abrupt("return",c.arg);i="executing";r=s(o,a,c);if("normal"===r.type){if(i=c.done?"completed":"suspendedYield",r.arg===f)continue;return{value:r.arg,done:c.done}}"throw"===r.type&&(i="completed",c.method="throw",c.arg=r.arg)}})}),e}function s(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}c.wrap=i;var f={};function h(){}function d(){}function p(){}var e={},y=(a(e,n,function(){return this}),Object.getPrototypeOf),y=y&&y(y(x([]))),m=(y&&y!==t&&u.call(y,n)&&(e=y),p.prototype=h.prototype=Object.create(e));function v(t){["next","throw","return"].forEach(function(e){a(t,e,function(t){return this._invoke(e,t)})})}function g(c,i){var e;l(this,"_invoke",{value:function(r,n){function t(){return new i(function(t,e){!function e(t,r,n,o){var a,t=s(c[t],c,r);if("throw"!==t.type)return(r=(a=t.arg).value)&&"object"==_typeof(r)&&u.call(r,"__await")?i.resolve(r.__await).then(function(t){e("next",t,n,o)},function(t){e("throw",t,n,o)}):i.resolve(r).then(function(t){a.value=t,n(a)},function(t){return e("throw",t,n,o)});o(t.arg)}(r,n,t,e)})}return e=e?e.then(t,t):t()}})}function _(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function w(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function b(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(_,this),this.reset(!0)}function x(e){if(e){var r,t=e[n];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length))return r=-1,(t=function t(){for(;++r<e.length;)if(u.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t}).next=t}return{next:E}}function E(){return{value:void 0,done:!0}}return l(m,"constructor",{value:d.prototype=p,configurable:!0}),l(p,"constructor",{value:d,configurable:!0}),d.displayName=a(p,o,"GeneratorFunction"),c.isGeneratorFunction=function(t){t="function"==typeof t&&t.constructor;return!!t&&(t===d||"GeneratorFunction"===(t.displayName||t.name))},c.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,p):(t.__proto__=p,a(t,o,"GeneratorFunction")),t.prototype=Object.create(m),t},c.awrap=function(t){return{__await:t}},v(g.prototype),a(g.prototype,r,function(){return this}),c.AsyncIterator=g,c.async=function(t,e,r,n,o){void 0===o&&(o=Promise);var a=new g(i(t,e,r,n),o);return c.isGeneratorFunction(e)?a:a.next().then(function(t){return t.done?t.value:a.next()})},v(m),a(m,o,"Generator"),a(m,n,function(){return this}),a(m,"toString",function(){return"[object Generator]"}),c.keys=function(t){var e,r=Object(t),n=[];for(e in r)n.push(e);return n.reverse(),function t(){for(;n.length;){var e=n.pop();if(e in r)return t.value=e,t.done=!1,t}return t.done=!0,t}},c.values=x,b.prototype={constructor:b,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(w),!t)for(var e in this)"t"===e.charAt(0)&&u.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(r){if(this.done)throw r;var n=this;function t(t,e){return a.type="throw",a.arg=r,n.next=t,e&&(n.method="next",n.arg=void 0),!!e}for(var e=this.tryEntries.length-1;0<=e;--e){var o=this.tryEntries[e],a=o.completion;if("root"===o.tryLoc)return t("end");if(o.tryLoc<=this.prev){var c=u.call(o,"catchLoc"),i=u.call(o,"finallyLoc");if(c&&i){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(c){if(this.prev<o.catchLoc)return t(o.catchLoc,!0)}else{if(!i)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;0<=r;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&u.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}var a=(o=o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc?null:o)?o.completion:{};return a.type=t,a.arg=e,o?(this.method="next",this.next=o.finallyLoc,f):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),f},finish:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),w(r),f}},catch:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var r,n,o=this.tryEntries[e];if(o.tryLoc===t)return"throw"===(r=o.completion).type&&(n=r.arg,w(o)),n}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:x(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),f}},c}var __awaiter=function(t,c,i,u){return new(i=i||Promise)(function(r,e){function n(t){try{a(u.next(t))}catch(t){e(t)}}function o(t){try{a(u.throw(t))}catch(t){e(t)}}function a(t){var e;t.done?r(t.value):((e=t.value)instanceof i?e:new i(function(t){t(e)})).then(n,o)}a((u=u.apply(t,c||[])).next())})},ageCalcForm=document.querySelector(".age-calc-form"),ageCalcInputs=document.querySelectorAll(".age-calc-form__input"),yearInput=document.querySelector('.age-calc-form__input[data-id="year"]'),ageCalcSubmitBtn=document.querySelector(".age-calc-form__submit-btn"),currentDate=new Date,timeout=function(){return new Promise(function(t){return setTimeout(t,300)})},calculateAge=function(e){return __awaiter(_this,void 0,void 0,_regeneratorRuntime().mark(function t(){return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return e.preventDefault(),t.next=3,validateForm();case 3:if(!1===t.sent)return t.abrupt("return");t.next=6;break;case 6:ageCalcForm.classList.remove("age-calc-form--error"),getAge();case 8:case"end":return t.stop()}},t)}))},getAge=function(){var t=document.querySelector('.age-calc-form__input[data-id="day"]'),e=document.querySelector('.age-calc-form__input[data-id="month"]'),e=new Date("".concat(e.value,"/").concat(t.value,"/").concat(yearInput.value)),t=currentDate.valueOf()-e.valueOf(),r=document.querySelector(".age-calc-output-template").content.cloneNode(!0),n=document.querySelector(".age-calc-output"),o=Math.round(t/1e3/60/60/24%365.25),a=Math.floor(t/1e3/60/60/24/30.437%12),c=Math.round(t/1e3/60/60/24/365.25-1);(e.getMonth()===currentDate.getMonth()&&e.getDate()<=currentDate.getDate()||e.getMonth()<currentDate.getMonth())&&(c+=1),365===o&&(a=o=0),n.textContent="",["days","months","years"].forEach(function(t){var e=r.querySelector(".age-calc-output__text--".concat(t));switch((isNaN(Number(o))||isNaN(Number(a))||isNaN(Number(c)))&&(c=a=o="--"),t){case"days":1===o&&(t=t.slice(0,-1)),e.innerHTML='<span class="age-calc-output__text--highlighted">'.concat(o,"</span> ").concat(t);break;case"months":1===a&&(t=t.slice(0,-1)),e.innerHTML='<span class="age-calc-output__text--highlighted">'.concat(a,"</span> ").concat(t);break;case"years":1===c&&(t=t.slice(0,-1)),e.innerHTML='<span class="age-calc-output__text--highlighted">'.concat(c,"</span> ").concat(t)}n.append(e)})},validateForm=function(){return __awaiter(_this,void 0,void 0,_regeneratorRuntime().mark(function t(){var e,r=this;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(!1===checkIfEmpty())return t.abrupt("return",!1);t.next=2;break;case 2:return e=function(){return __awaiter(r,void 0,void 0,_regeneratorRuntime().mark(function t(){return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,timeout();case 2:return t.abrupt("return",checkIfAccurateValues());case 3:case"end":return t.stop()}},t)}))},t.next=5,e();case 5:return t.abrupt("return",t.sent);case 6:case"end":return t.stop()}},t)}))},checkIfEmpty=function(){var r=[],n=[];return ageCalcInputs.forEach(function(t){var e=t.dataset.id;(""===t.value?r:n).push(e)}),n.forEach(function(t){return removeError(t,"all")}),r.forEach(function(t){return addError(t,"empty")}),0===r.length},checkIfAccurateValues=function(){var n,o,a=document.querySelectorAll(".age-calc-form__error"),c=[1,3,5,7,8,10,12],i=Number(yearInput.value),e=0;return ageCalcInputs.forEach(function(t){var e=t.dataset.id;Array.from(a).find(function(t){return t.dataset.errorId===e});switch(e){case"day":(n=Number(t.value))<=0&&addError("day","notValidated");break;case"month":if(12<(o=Number(t.value))||o<=0)addError("month","notValidated");else{if(2===o){if(28<n&&i%4!=0)return void addError("day","notValidated");removeError("day","one")}else if(c.includes(o)){if(31<n)return void addError("day","notValidated");removeError("day","one")}else if(2!==o){if(30<n)return void addError("day","notValidated");removeError("day","one")}removeError("month","one")}break;case"year":var r=currentDate.getFullYear();r<i||i===r&&n>currentDate.getDate()||i===r&&o-1>currentDate.getMonth()?addError("year","notValidated"):removeError("year","one")}}),a.forEach(function(t){return""===t.textContent?e++:e--}),3===e},removeError=function(t,e){"all"===e&&ageCalcForm.classList.remove("age-calc-form--error");var r=document.querySelector('.age-calc-form__error[data-error-id="'.concat(t,'"'));r.classList.remove("age-calc-form__error--active"),setTimeout(function(){r.textContent="",r.classList.remove("age-calc-form__error--active-visibility")},300)},addError=function(t,e){var r=document.querySelector('.age-calc-form__error[data-error-id="'.concat(t,'"'));if(ageCalcForm.classList.add("age-calc-form--error"),"empty"===e)r.textContent="This field is required";else switch(t){case"day":r.textContent="Must be a valid day";break;case"month":r.textContent="Must be a valid month";break;case"year":r.textContent="Must be in the past"}r.classList.add("age-calc-form__error--active"),r.classList.add("age-calc-form__error--active-visibility")};getAge(),ageCalcSubmitBtn.addEventListener("click",calculateAge);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
